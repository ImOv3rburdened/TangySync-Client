<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0-windows</TargetFramework>

    <!-- Let solution show AnyCPU/x64; always emit x64 -->
    <Platforms>AnyCPU;x64</Platforms>
    <PlatformTarget Condition="'$(Platform)'==''">x64</PlatformTarget>
    <PlatformTarget Condition="'$(Platform)'=='AnyCPU'">x64</PlatformTarget>
    <PlatformTarget Condition="'$(Platform)'=='x64'">x64</PlatformTarget>

    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>

    <AssemblyName>TangySyncClient</AssemblyName>
    <RootNamespace>TangySyncClient</RootNamespace>

    <!-- ensures NuGet runtime deps (ImGui.NET, K4os.*) land in bin\ -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

    <!-- Keep this in sync with manifest.json -->
    <PluginVersion>0.1.1</PluginVersion>
    <Version>$(PluginVersion)</Version>

    <!-- Your GitHub -->
    <GitHubOwner>ImOv3rburdened</GitHubOwner>
    <GitHubRepo>TangySync-Client</GitHubRepo>

    <!-- ZIP name we’ll commit to the repo -->
    <ReleaseZipName>release.zip</ReleaseZipName>

    <!-- Dev plugins folder for quick testing -->
    <DevPluginDir>$(APPDATA)\XIVLauncher\devPlugins\TangySyncClient</DevPluginDir>

    <!-- Put packaged ZIP inside repo under TangySyncClient/release -->
    <DistDir>$(ProjectDir)release</DistDir>
    <PackDir>$(DistDir)\_pack</PackDir>

    <!-- Repo JSON will point to the raw GitHub URL for that file -->
    <ReleaseZipUrl>https://raw.githubusercontent.com/$(GitHubOwner)/$(GitHubRepo)/main/TangySyncClient/release/$(ReleaseZipName)</ReleaseZipUrl>
  </PropertyGroup>

  <Target Name="WarnAnyCpu" BeforeTargets="Build" Condition="'$(Platform)'=='AnyCPU'">
    <Message Text="NOTE: Platform 'AnyCPU' selected; project will still emit x64 binaries." Importance="high" />
  </Target>

  <!-- Reference local Dalamud -->
  <ItemGroup>
    <Reference Include="Dalamud">
      <HintPath>$(ProjectDir)lib\Dalamud.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <!-- NuGet deps you ship -->
  <ItemGroup>
    <PackageReference Include="ImGui.NET" Version="1.*" />
    <PackageReference Include="K4os.Compression.LZ4.Legacy" Version="*" />
  </ItemGroup>

  <!-- Dev copy -->
  <ItemGroup>
    <DevCopy Include="$(TargetDir)*.dll" Exclude="$(TargetDir)Dalamud.*.dll" />
    <DevCopy Include="$(ProjectDir)manifest.json" />
  </ItemGroup>

  <Target Name="DevCopy_TangySync" AfterTargets="Build">
    <Message Text="Copying dev files to $(DevPluginDir)" Importance="high" />
    <MakeDir Directories="$(DevPluginDir)" />
    <Copy SourceFiles="@(DevCopy)" DestinationFolder="$(DevPluginDir)" SkipUnchangedFiles="true" />
  </Target>

  <!-- Package: stage to _pack then zip using PowerShell
       IMPORTANT: Recompute the include list INSIDE the target (after build). -->
  <Target Name="Package_TangySync" AfterTargets="Build">
    <Message Text="Packaging to $(DistDir)\$(ReleaseZipName)" Importance="high" />

    <!-- Recompute file list at target execution time -->
    <ItemGroup>
      <PluginZipInclude Remove="@(PluginZipInclude)" />
      <!-- all runtime DLLs next to the built assembly, except Dalamud.* -->
      <PluginZipInclude Include="$(TargetDir)*.dll" Exclude="$(TargetDir)Dalamud.*.dll" />
      <!-- always include your project-root manifest.json -->
      <PluginZipInclude Include="$(ProjectDir)manifest.json" />
    </ItemGroup>

    <!-- Stage -->
    <MakeDir Directories="$(DistDir)" />
    <RemoveDir Directories="$(PackDir)" Condition="Exists('$(PackDir)')" />
    <MakeDir Directories="$(PackDir)" />
    <Copy SourceFiles="@(PluginZipInclude)" DestinationFolder="$(PackDir)" SkipUnchangedFiles="true" />

    <!-- Log staged files for debugging -->
    <Message Text="Staged files:" Importance="high" />
    <Message Text="  @(PluginZipInclude->'%(FullPath)')" Importance="high" />

    <!-- Zip -->
    <Exec Command="powershell -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command &quot;Compress-Archive -Path &apos;$(PackDir)\*&apos; -DestinationPath &apos;$(DistDir)\$(ReleaseZipName)&apos; -Force&quot;" />

    <!-- Clean staging -->
    <RemoveDir Directories="$(PackDir)" />

    <!-- Proper Dalamud repo JSON (ARRAY with one plugin) -->
    <ItemGroup>
      <RepoLines Include="[" />
      <RepoLines Include="  {" />
      <RepoLines Include="    &quot;Author&quot;: &quot;Tangy&quot;," />
      <RepoLines Include="    &quot;Name&quot;: &quot;TangySync&quot;," />
      <RepoLines Include="    &quot;InternalName&quot;: &quot;TangySyncClient&quot;," />
      <RepoLines Include="    &quot;AssemblyVersion&quot;: &quot;$(PluginVersion)&quot;," />
      <RepoLines Include="    &quot;ApplicableVersion&quot;: &quot;any&quot;," />
      <RepoLines Include="    &quot;DalamudApiLevel&quot;: 13," />
      <RepoLines Include="    &quot;Description&quot;: &quot;See-everyone sync + GPose MCDF loader (Glamourer/Penumbra/etc).&quot;," />
      <RepoLines Include="    &quot;RepoUrl&quot;: &quot;https://github.com/$(GitHubOwner)/$(GitHubRepo)&quot;," />
      <RepoLines Include="    &quot;Punchline&quot;: &quot;Sync + MCDF apply&quot;," />
      <RepoLines Include="    &quot;Tags&quot;: [&quot;tangy&quot;,&quot;mcdf&quot;,&quot;glamourer&quot;,&quot;penumbra&quot;,&quot;syncshell&quot;]," />
      <RepoLines Include="    &quot;LoadPriority&quot;: 0," />
      <RepoLines Include="    &quot;DownloadLinkInstall&quot;: &quot;$(ReleaseZipUrl)&quot;," />
      <RepoLines Include="    &quot;DownloadLinkUpdate&quot;:  &quot;$(ReleaseZipUrl)&quot;" />
      <RepoLines Include="  }" />
      <RepoLines Include="]" />
    </ItemGroup>

    <!-- Write JSON next to the csproj (this is the raw URL you share) -->
    <WriteLinesToFile File="$(ProjectDir)\TangySync.json" Lines="@(RepoLines)" Overwrite="true" />
  </Target>

  <!-- Keep manifest near bin\ too (nice for dev) -->
  <ItemGroup>
    <None Update="manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>
